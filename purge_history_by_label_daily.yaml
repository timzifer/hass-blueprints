blueprint:
  name: Purge History by Label (Daily)
  description: >-
    Purges the history for all entities assigned a specific label once daily (at a fixed time).
    This uses the `recorder.purge_entities` service. 
    Warning: Purging history is irreversible. Use with caution.
  source_url: "https://raw.githubusercontent.com/timzifer/hass-blueprints/main/purge_history_by_label_daily.yaml"
  domain: automation
  input:
    # Input for interval removed
    target_label:
      name: Target Label
      description: The label assigned to entities whose history should be purged.
      selector:
        text:
    keep_days:
      name: Keep Recent Days (Optional)
      description: >-
        Number of recent days of history to KEEP for the targeted entities. 
        Set to 0 to purge ALL history for these entities.
      selector:
        number:
          min: 0
          max: 30 # Sensible maximum
          unit_of_measurement: days
          mode: box
      default: 0 # Default to purging all history

trigger:
  - platform: time
    at: "03:05:00" 

condition: [] # No conditions needed by default

action:
  # Schritt 1: Variablen definieren, die in den folgenden Schritten verfügbar sind
  - variables:
      # Hole die Inputs aus dem Blueprint
      label_to_purge: !input target_label
      days_to_keep_config: !input keep_days 
      # Ermittle die Entitäten direkt hier
      entities_to_purge_list: "{{ label_entities(label_to_purge) }}"
      # Bereite den keep_days Wert vor (Zahl oder None für 'weglassen')
      keep_days_value: >-
        {% if days_to_keep_config > 0 %}
          {{ days_to_keep_config }}
        {% else %}
          {{ None }} 
        {% endif %}

  # Schritt 2: Rufe den eigentlichen Service auf
  - service: recorder.purge_entities
    # Das data-Template greift auf die oben definierten Variablen zurück
    data: >
      {# Erstelle das Daten-Payload für den Service-Aufruf #}
      {% set data_payload = {'entity_id': entities_to_purge_list} %}
      
      {# Füge keep_days nur hinzu, wenn der Wert nicht None ist #}
      {% if keep_days_value != None %}
        {% set _ = data_payload.update({'keep_days': keep_days_value}) %}
      {% endif %}
      
      {{ data_payload }}

  # Schritt 3: Optionaler Delay
  - delay: 
      seconds: 5
